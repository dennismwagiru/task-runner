version: '3'
services:

  api:
    build: .
    ports:
      - "5000:5000"
    volumes:
      - .:/usr/src/app
    environment:
      APP_PORT: 5000
      FLASK_ENV: "development"
      MONGODB_DATABASE: taskrunner
      MONGODB_USERNAME: flaskuser
      MONGODB_PASSWORD: 1234
      MONGODB_HOSTNAME: mongodb
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    command: sh -c "python manage.py run -h 0.0.0.0"
    depends_on:
      - mongodb
      - redis

  worker:
    build: .
    command: celery worker --app=src.app.tasks.celery --loglevel=info --logfile=src/logs/celery.log
    volumes:
      - .:/usr/src/app
    environment:
      FLASK_ENV: "development"
      MONGODB_DATABASE: taskrunner
      MONGODB_USERNAME: flaskuser
      MONGODB_PASSWORD: 1234
      MONGODB_HOSTNAME: mongodb
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    depends_on:
      - api
      - redis

  dashboard:
    build: .
    command: flower --app=src.app.tasks.celery --port=5555 --broker=redis://redis:6379/0
    ports:
      - 5556:5555
    environment:
      FLASK_ENV: "development"
      MONGODB_DATABASE: taskrunner
      MONGODB_USERNAME: flaskuser
      MONGODB_PASSWORD: 1234
      MONGODB_HOSTNAME: mongodb
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    depends_on:
      - api
      - redis
      - worker

  mongodb:
    image: mongo:4.0.8
    container_name: mongodb
    restart: unless-stopped
    command: mongod
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongoroot
      MONGO_INITDB_ROOT_PASSWORD: root1234
      MONGO_INITDB_DATABASE: taskrunner
      MONGODB_DATA_DIR: /data/db
      MONDODB_LOG_DIR: /dev/null
    volumes:
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro

  redis:
    image: redis:6-alpine

volumes:
  mongodbdata:
    driver: local
  appdata:
    driver: local